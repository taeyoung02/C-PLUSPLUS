void f ( Circle p )
call by value. 값에 의한 호출은 매개변수에 값을 복사함
생성자가 실행되지 않고 소멸자만 실행, 복사생성자 실행됨
만약 생성자가 실행되면 p의 값이 기본생성자로 초기화되어
원본객체의 상태를 잃어버림
또한 매개변수 객체만 변경되고 원본은 그대로


void f ( Circle *p)
call by address. 주소에 의한 호출은 매개변수에 주소만 넘겨줌
생성자와 소멸자와 상관X
p는 객체가 아니라 포인터 변수이기 때문

void f ( Circle &p)
call by reference. 참조에 의한 호출은
참조 매개 변수는 이름만 생성되므로, 생성자 소멸자 없음

복사생성자 Circle(Circle &c)
포인터변수가 있는 경우엔 깊은 복사 = 객체의 맴버포인터가 할당받은 메모리도 복사.(동적 할당)
얕은 복사를 해버리면 원본객체안의 멤버중 포인터변수가 가진 메모리를 복사본이 공유해버림

묵시적 복사의 경우들
Circle x =y; // x(y).
void f ( Circle c) //값에의한 호출
Circle f() { // 객체리턴
Circle x;
 return x; }
